#!/usr/bin/env bash

if [ "$ROFI_INFO" != "" ];
then
    coproc ( $ROFI_INFO > /dev/null )
    exit 0
fi

CACHE_FILE="$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/cp-cache"


IFS=$'\n'
#keybinds=($(hyprctl -j binds | jq  -r '.[] | select (.description!="") | .dispatcher,  .arg , .modmask, .key ,.description'))
mapfile -t keybinds < <(hyprctl -j binds | jq -r '.[] | select(.description != "") | .dispatcher, .arg, .modmask, .key, .description')
current_array=0
read_cache=1

convert_keycode () {
  case "$1" in
    "1")
      echo "Shift-"
      ;;
    "4")
      echo "Ctrl-"
      ;;
    "8")
      echo "Alt-"
      ;;
    "64")
      echo "Super-"
      ;;
    "65")
      echo "Super-Shift-"
      ;;
    "68")
      echo "Super-Ctrl-"
      ;;
    "72")
      echo "Super-Alt-"
      ;;
  esac
}

replace_key () {
  case "$1" in
    "left")
      echo ""
      ;;
    "down")
      echo ""
      ;;
    "up")
      echo ""
      ;;
    "right")
      echo ""
      ;;
    *)
      echo "${1^}"
  esac
}

generate_hyprland_commands () {
echo -en "\0prompt\x1f  \n" 
echo -en "\0markup-rows\x1ftrue\n"

while (( $current_array < ${#keybinds[@]} )); do
  dispatcher_element=$(echo ${keybinds[$current_array]})
  argument_element=$(echo ${keybinds[$((current_array+1))]})
  modmask_element=$(convert_keycode $(echo ${keybinds[$((current_array+2))]}))
  key_element=$(replace_key $(echo ${keybinds[$((current_array+3))]}))
  desc_element=$(echo ${keybinds[$((current_array+4))]})

  next_keybind=5

  dispatcher_element_next=$(echo ${keybinds[$(($current_array+$next_keybind))]} | tr -d '"')
  argument_element_next=$(echo ${keybinds[$((current_array+$next_keybind+1))]} | tr -d '"')
  modmask_element_next=$(convert_keycode $(echo ${keybinds[$((current_array+$next_keybind+2))]} | tr -d '"'))
  key_element_next=$(replace_key $(echo ${keybinds[$((current_array+$next_keybind+3))]} | tr -d '"'))
  desc_element_next=$(echo ${keybinds[$((current_array+$next_keybind+4))]} | tr -d '"')
  entry_keybind="$modmask_element$key_element"

  while [[ "$dispatcher_element" == "$dispatcher_element_next" ]] && [[ "$argument_element" && "$argument_element_next" ]] && [[ "$desc_element" == "$desc_element_next" ]]; do
      entry_keybind="$entry_keybind $modmask_element_next$key_element_next"
      next_keybind=$next_keybind+5

      dispatcher_element_next=$(echo ${keybinds[$(($current_array+$next_keybind))]} | tr -d '"')
      argument_element_next=$(echo ${keybinds[$((current_array+$next_keybind+1))]} | tr -d '"')
      modmask_element_next=$(convert_keycode $(echo ${keybinds[$((current_array+$next_keybind+2))]} | tr -d '"'))
      key_element_next=$(replace_key $(echo ${keybinds[$((current_array+$next_keybind+3))]} | tr -d '"'))
      desc_element_next=$(echo ${keybinds[$((current_array+$next_keybind+4))]} | tr -d '"')

  done

  if [[ $dispatcher_element != "exec" ]]; then
      command="hyprctl dispatch $dispatcher_element $argument_element" 
  else
      command="eval $argument_element"
  fi

  if [[ "$desc_element" == *"\0"* ]]; then
    display="$(echo -ne $desc_element | sed "s/\x00.*\x1f.*//g")"
    echo -en "$desc_element\x1fdisplay\x1f$display <span style=\"italic\" size=\"smaller\">($entry_keybind)</span>\x1finfo\x1f$command \n"
  else
  echo -en "$desc_element <span style=\"italic\" size=\"smaller\">($entry_keybind)</span>\0info\x1f$command \n"
  fi

  current_array=$(($current_array+$next_keybind))
done
}


while [ -n "$1" ]; do
	case "$1" in
    -g)
      generate=1
      ;;
    -n)
      read_cache=0
      ;;
    *)
      custom_command_json="$(eval echo $1)"
  esac
  shift
done

if [[ $generate == 1 ]]; then
  #generate_hyprland_commands > "$CACHE_FILE"
  generate_hyprland_commands > "$CACHE_FILE"
else
  if [[ -a $CACHE_FILE ]] && [[ $read_cache == 1 ]]; then
    cat $CACHE_FILE
  else
    generate_hyprland_commands 
  fi
fi

if [[ -n $custom_command_json ]]; then
  mapfile -t custom_commands < <(jq -r '.[] | .dispatcher, .arg, .description' $custom_command_json)

  current_array=0
  while (( $current_array < ${#custom_command_json[@]} )); do
  dispatcher_element=$(echo ${custom_commands[$current_array]})
  argument_element=$(echo ${custom_commands[$((current_array+1))]})
  desc_element=$(echo ${custom_commands[$((current_array+2))]})

  if [[ $dispatcher_element != "exec" ]]; then
      command="hyprctl dispatch $dispatcher_element $argument_element" 
  else
      command="eval $argument_element"
  fi

  echo -en "$desc_element \0info\x1f$command \n"
  current_array=$(($current_array+3))
  done
fi
